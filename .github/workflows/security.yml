name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6AM UTC

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Install security tools
        run: |
          echo "üîß Installing security tools..."
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          go install golang.org/x/vuln/cmd/govulncheck@latest
          echo "‚úÖ Security tools installed"

      - name: Run gosec security scanner
        run: |
          echo "üîê Running security scan..."
          gosec -conf .gosec.json -fmt json -out gosec-report.json -stdout ./...
          echo "‚úÖ Security scan completed"

      - name: Run vulnerability check
        run: |
          echo "üîç Checking for known vulnerabilities..."
          govulncheck -json ./... > govulncheck-report.json || echo "‚ö†Ô∏è  Vulnerabilities found - saving detailed report"
          govulncheck ./... || echo "‚ö†Ô∏è  Vulnerabilities found - please review and update dependencies"
          echo "‚úÖ Vulnerability check completed"

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            gosec-report.json
            govulncheck-report.json

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate